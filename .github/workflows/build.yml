name: Build

on:
  push:
    tags:
      - 'v*'  # v로 시작하는 태그가 push될 때 실행

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          windows-latest,
        ]
        python-version: ['3.9']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install dependencies
      shell: bash
      run: poetry install
    
    - name: Convert icons
      shell: bash
      run: poetry run python scripts/convert_icon.py
    
    - name: Build with PyInstaller
      shell: bash
      run: poetry run python build.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wordiff-${{ matrix.os }}
        path: |
          dist/**/*
        if-no-files-found: ignore

  release:
    needs: [build, android-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
      
    - name: List files
      run: |
        echo "Downloaded artifacts:"
        ls -R artifacts/
        find artifacts/ -type f  # 모든 파일 경로 출력
      
    - name: 파일들을 릴리스용 디렉토리로 복사
      run: |
        mkdir -p release
        cp artifacts/wordiff-windows-latest/windows/wordiff.exe release/wordiff-windows.exe
        cp artifacts/wordiff-ubuntu-latest/linux/wordiff release/wordiff-linux
        cp artifacts/wordiff-android/*.apk release/wordiff-android.apk
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          release/wordiff-windows.exe
          release/wordiff-linux
          release/wordiff-android.apk
        draft: false
        prerelease: false
        generate_release_notes: true 

  android-build:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    # Android SDK 설정
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    # JDK 설정
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # Android SDK 도구 설치
    - name: Install Android SDK tools
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
      run: |
        yes | sdkmanager --licenses
        yes | sdkmanager --install "build-tools;33.0.0" "platform-tools" "platforms;android-33"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      shell: bash
      run: |
        poetry install
        pip3 install --user --upgrade buildozer cython
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip build-essential git python3 python3-dev
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
        sudo apt-get install -y libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev
        sudo apt-get install -y python3-setuptools
    
    - name: Build Android APK
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: ${{ env.ANDROID_HOME }}/ndk-bundle
      run: |
        export PATH=$ANDROID_HOME/build-tools/33.0.0:$PATH
        ls -la $ANDROID_HOME/build-tools/
        buildozer android debug
        mkdir -p dist/android
        mv bin/*.apk dist/android/
    
    - name: Upload Android artifact
      uses: actions/upload-artifact@v4
      with:
        name: wordiff-android
        path: dist/android/*.apk 

    - name: Check working directory
      run: |
        pwd
        ls -la
        cat buildozer.spec 